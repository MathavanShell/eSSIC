<?xml version="1.0" encoding="utf-8"?>
<this:MosWF this:curMode="0" this:curRole="0" this:extCount="0" this:curState="0" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mca="clr-namespace:Microsoft.CSharp.Activities;assembly=System.Activities" xmlns:sads="http://schemas.microsoft.com/netfx/2010/xaml/activities/debugger" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=mscorlib" xmlns:this="clr-namespace:eMosWF;assembly=eMosWF" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Text</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>eMosWF</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <this:MosWF.Implementation>
    <StateMachine DisplayName="MosStates">
      <StateMachine.InitialState>
        <State x:Name="__ReferenceID12" DisplayName="Initiate">
          <State.Transitions>
            <Transition DisplayName="New">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 1</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID9" DisplayName="Opened">
                  <State.Transitions>
                    <Transition DisplayName="new &gt; soti">
                      <Transition.To>
                        <State x:Name="__ReferenceID10" DisplayName="Submitted">
                          <State.Entry>
                            <If>
                              <If.Condition>
                                <InArgument x:TypeArguments="x:Boolean">
                                  <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 1</mca:CSharpValue>
                                </InArgument>
                              </If.Condition>
                              <If.Then>
                                <Sequence>
                                  <If>
                                    <If.Condition>
                                      <InArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                      </InArgument>
                                    </If.Condition>
                                    <If.Then>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Then>
                                    <If.Else>
                                      <Assign>
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:Boolean">
                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                          </OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                    </If.Else>
                                  </If>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Then>
                              <If.Else>
                                <Sequence DisplayName="Continue Sequence">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Boolean">
                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </State.Entry>
                          <State.Transitions>
                            <Transition DisplayName="new &gt; oim">
                              <Transition.To>
                                <State x:Name="__ReferenceID1" DisplayName="Endorsed">
                                  <State.Entry>
                                    <If>
                                      <If.Condition>
                                        <InArgument x:TypeArguments="x:Boolean">
                                          <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 2</mca:CSharpValue>
                                        </InArgument>
                                      </If.Condition>
                                      <If.Then>
                                        <Sequence>
                                          <If>
                                            <If.Condition>
                                              <InArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                              </InArgument>
                                            </If.Condition>
                                            <If.Then>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Then>
                                            <If.Else>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </If.Else>
                                          </If>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Then>
                                      <If.Else>
                                        <Sequence DisplayName="Continue Sequence">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Boolean">
                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </If.Else>
                                    </If>
                                  </State.Entry>
                                  <State.Transitions>
                                    <Transition DisplayName="found">
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                      </Transition.Condition>
                                      <Transition.To>
                                        <State x:Name="__ReferenceID0" DisplayName="End" IsFinal="True">
                                          <State.Entry>
                                            <Sequence>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpReference x:TypeArguments="x:Int32">nextRole</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpValue x:TypeArguments="x:Int32">targetNextRole</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpReference x:TypeArguments="x:Int32">nextState</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpValue x:TypeArguments="x:Int32">targetState</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpReference x:TypeArguments="x:Int32">nextFunction</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpValue x:TypeArguments="x:Int32">targetFunction</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">isEditMode</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">isNeedAction</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Boolean">
                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">targetNeedAction</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                              <Assign>
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpReference x:TypeArguments="x:Int32">nextCount</mca:CSharpReference>
                                                  </OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:Int32">
                                                    <mca:CSharpValue x:TypeArguments="x:Int32">extCount</mca:CSharpValue>
                                                  </InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </State.Entry>
                                        </State>
                                      </Transition.To>
                                    </Transition>
                                    <Transition DisplayName="new &gt; ot">
                                      <Transition.To>
                                        <State x:Name="__ReferenceID5" DisplayName="Approved">
                                          <State.Entry>
                                            <If>
                                              <If.Condition>
                                                <InArgument x:TypeArguments="x:Boolean">
                                                  <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 3</mca:CSharpValue>
                                                </InArgument>
                                              </If.Condition>
                                              <If.Then>
                                                <Sequence>
                                                  <If>
                                                    <If.Condition>
                                                      <InArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                      </InArgument>
                                                    </If.Condition>
                                                    <If.Then>
                                                      <If>
                                                        <If.Condition>
                                                          <InArgument x:TypeArguments="x:Boolean">
                                                            <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 1 || curMode == 2</mca:CSharpValue>
                                                          </InArgument>
                                                        </If.Condition>
                                                        <If.Then>
                                                          <Sequence>
                                                            <Assign>
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                            <Assign>
                                                              <Assign.To>
                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">targetNeedAction</mca:CSharpReference>
                                                                </OutArgument>
                                                              </Assign.To>
                                                              <Assign.Value>
                                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                              </Assign.Value>
                                                            </Assign>
                                                          </Sequence>
                                                        </If.Then>
                                                        <If.Else>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </If.Else>
                                                      </If>
                                                    </If.Then>
                                                    <If.Else>
                                                      <Assign>
                                                        <Assign.To>
                                                          <OutArgument x:TypeArguments="x:Boolean">
                                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                          </OutArgument>
                                                        </Assign.To>
                                                        <Assign.Value>
                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                        </Assign.Value>
                                                      </Assign>
                                                    </If.Else>
                                                  </If>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Then>
                                              <If.Else>
                                                <Sequence DisplayName="Continue Sequence">
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </If.Else>
                                            </If>
                                          </State.Entry>
                                          <State.Transitions>
                                            <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                              </Transition.Condition>
                                            </Transition>
                                            <Transition DisplayName="new &gt; ps">
                                              <Transition.To>
                                                <State x:Name="__ReferenceID2" DisplayName="Authorized">
                                                  <State.Entry>
                                                    <If>
                                                      <If.Condition>
                                                        <InArgument x:TypeArguments="x:Boolean">
                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 6</mca:CSharpValue>
                                                        </InArgument>
                                                      </If.Condition>
                                                      <If.Then>
                                                        <Sequence>
                                                          <If>
                                                            <If.Condition>
                                                              <InArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                              </InArgument>
                                                            </If.Condition>
                                                            <If.Then>
                                                              <If>
                                                                <If.Condition>
                                                                  <InArgument x:TypeArguments="x:Boolean">
                                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 2</mca:CSharpValue>
                                                                  </InArgument>
                                                                </If.Condition>
                                                                <If.Then>
                                                                  <Sequence>
                                                                    <Assign>
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                                          <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                        </OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                    <Assign>
                                                                      <Assign.To>
                                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                                          <mca:CSharpReference x:TypeArguments="x:Boolean">targetNeedAction</mca:CSharpReference>
                                                                        </OutArgument>
                                                                      </Assign.To>
                                                                      <Assign.Value>
                                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                      </Assign.Value>
                                                                    </Assign>
                                                                  </Sequence>
                                                                </If.Then>
                                                                <If.Else>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </If.Else>
                                                              </If>
                                                            </If.Then>
                                                            <If.Else>
                                                              <Assign>
                                                                <Assign.To>
                                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                  </OutArgument>
                                                                </Assign.To>
                                                                <Assign.Value>
                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                </Assign.Value>
                                                              </Assign>
                                                            </If.Else>
                                                          </If>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Then>
                                                      <If.Else>
                                                        <Sequence DisplayName="Continue Sequence">
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </If.Else>
                                                    </If>
                                                  </State.Entry>
                                                  <State.Transitions>
                                                    <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                                                      <Transition.Condition>
                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                                      </Transition.Condition>
                                                    </Transition>
                                                    <Transition DisplayName="new &gt; cro">
                                                      <Transition.To>
                                                        <State x:Name="__ReferenceID4" DisplayName="Agreed">
                                                          <State.Entry>
                                                            <If>
                                                              <If.Condition>
                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                  <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 4</mca:CSharpValue>
                                                                </InArgument>
                                                              </If.Condition>
                                                              <If.Then>
                                                                <Sequence>
                                                                  <If>
                                                                    <If.Condition>
                                                                      <InArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                                      </InArgument>
                                                                    </If.Condition>
                                                                    <If.Then>
                                                                      <If>
                                                                        <If.Condition>
                                                                          <InArgument x:TypeArguments="x:Boolean">
                                                                            <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 1 || curMode == 2</mca:CSharpValue>
                                                                          </InArgument>
                                                                        </If.Condition>
                                                                        <If.Then>
                                                                          <Sequence>
                                                                            <Assign>
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                </OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                            <Assign>
                                                                              <Assign.To>
                                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">targetNeedAction</mca:CSharpReference>
                                                                                </OutArgument>
                                                                              </Assign.To>
                                                                              <Assign.Value>
                                                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                              </Assign.Value>
                                                                            </Assign>
                                                                          </Sequence>
                                                                        </If.Then>
                                                                        <If.Else>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </If.Else>
                                                                      </If>
                                                                    </If.Then>
                                                                    <If.Else>
                                                                      <Assign>
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Boolean">
                                                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </If.Else>
                                                                  </If>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </If.Then>
                                                              <If.Else>
                                                                <Sequence DisplayName="Continue Sequence">
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </If.Else>
                                                            </If>
                                                          </State.Entry>
                                                          <State.Transitions>
                                                            <Transition DisplayName="new (cro)">
                                                              <Transition.To>
                                                                <State x:Name="__ReferenceID3" DisplayName="Acknowledged">
                                                                  <State.Entry>
                                                                    <If>
                                                                      <If.Condition>
                                                                        <InArgument x:TypeArguments="x:Boolean">
                                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 5</mca:CSharpValue>
                                                                        </InArgument>
                                                                      </If.Condition>
                                                                      <If.Then>
                                                                        <Sequence>
                                                                          <If>
                                                                            <If.Condition>
                                                                              <InArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                                              </InArgument>
                                                                            </If.Condition>
                                                                            <If.Then>
                                                                              <If>
                                                                                <If.Condition>
                                                                                  <InArgument x:TypeArguments="x:Boolean">
                                                                                    <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 1 || curMode == 2</mca:CSharpValue>
                                                                                  </InArgument>
                                                                                </If.Condition>
                                                                                <If.Then>
                                                                                  <Sequence>
                                                                                    <Assign>
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                                                          <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                        </OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                    <Assign>
                                                                                      <Assign.To>
                                                                                        <OutArgument x:TypeArguments="x:Boolean">
                                                                                          <mca:CSharpReference x:TypeArguments="x:Boolean">targetNeedAction</mca:CSharpReference>
                                                                                        </OutArgument>
                                                                                      </Assign.To>
                                                                                      <Assign.Value>
                                                                                        <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                      </Assign.Value>
                                                                                    </Assign>
                                                                                  </Sequence>
                                                                                </If.Then>
                                                                                <If.Else>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </If.Else>
                                                                              </If>
                                                                            </If.Then>
                                                                            <If.Else>
                                                                              <Assign>
                                                                                <Assign.To>
                                                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                  </OutArgument>
                                                                                </Assign.To>
                                                                                <Assign.Value>
                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                </Assign.Value>
                                                                              </Assign>
                                                                            </If.Else>
                                                                          </If>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </If.Then>
                                                                      <If.Else>
                                                                        <Sequence DisplayName="Continue Sequence">
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </If.Else>
                                                                    </If>
                                                                  </State.Entry>
                                                                  <State.Transitions>
                                                                    <Transition DisplayName="close &gt; soti">
                                                                      <Transition.To>
                                                                        <State x:Name="__ReferenceID6" DisplayName="Completed">
                                                                          <State.Entry>
                                                                            <If>
                                                                              <If.Condition>
                                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                                  <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 9</mca:CSharpValue>
                                                                                </InArgument>
                                                                              </If.Condition>
                                                                              <If.Then>
                                                                                <Sequence>
                                                                                  <If>
                                                                                    <If.Condition>
                                                                                      <InArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                                                      </InArgument>
                                                                                    </If.Condition>
                                                                                    <If.Then>
                                                                                      <Assign>
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Boolean">
                                                                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                          </OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Then>
                                                                                    <If.Else>
                                                                                      <Assign>
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Boolean">
                                                                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                          </OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Else>
                                                                                  </If>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                              </If.Then>
                                                                              <If.Else>
                                                                                <Sequence DisplayName="Continue Sequence">
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                              </If.Else>
                                                                            </If>
                                                                          </State.Entry>
                                                                          <State.Transitions>
                                                                            <Transition DisplayName="close &gt; ps" To="{x:Reference __ReferenceID1}">
                                                                              <Transition.Action>
                                                                                <Sequence DisplayName="PS">
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                              </Transition.Action>
                                                                              <Transition.Condition>
                                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 3</mca:CSharpValue>
                                                                              </Transition.Condition>
                                                                            </Transition>
                                                                            <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                                                                              <Transition.Condition>
                                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                                                              </Transition.Condition>
                                                                            </Transition>
                                                                          </State.Transitions>
                                                                        </State>
                                                                      </Transition.To>
                                                                      <Transition.Action>
                                                                        <Sequence DisplayName="SOTI">
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </Transition.Action>
                                                                      <Transition.Condition>
                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 3</mca:CSharpValue>
                                                                      </Transition.Condition>
                                                                    </Transition>
                                                                    <Transition DisplayName="extend &gt; ot">
                                                                      <Transition.To>
                                                                        <State x:Name="__ReferenceID7" DisplayName="Extended">
                                                                          <State.Entry>
                                                                            <If>
                                                                              <If.Condition>
                                                                                <InArgument x:TypeArguments="x:Boolean">
                                                                                  <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 8</mca:CSharpValue>
                                                                                </InArgument>
                                                                              </If.Condition>
                                                                              <If.Then>
                                                                                <Sequence>
                                                                                  <If>
                                                                                    <If.Condition>
                                                                                      <InArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                                                      </InArgument>
                                                                                    </If.Condition>
                                                                                    <If.Then>
                                                                                      <If>
                                                                                        <If.Condition>
                                                                                          <InArgument x:TypeArguments="x:Boolean">
                                                                                            <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 2</mca:CSharpValue>
                                                                                          </InArgument>
                                                                                        </If.Condition>
                                                                                        <If.Then>
                                                                                          <Sequence>
                                                                                            <Assign>
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                                </OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                            <Assign>
                                                                                              <Assign.To>
                                                                                                <OutArgument x:TypeArguments="x:Boolean">
                                                                                                  <mca:CSharpReference x:TypeArguments="x:Boolean">targetNeedAction</mca:CSharpReference>
                                                                                                </OutArgument>
                                                                                              </Assign.To>
                                                                                              <Assign.Value>
                                                                                                <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                              </Assign.Value>
                                                                                            </Assign>
                                                                                          </Sequence>
                                                                                        </If.Then>
                                                                                        <If.Else>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </If.Else>
                                                                                      </If>
                                                                                    </If.Then>
                                                                                    <If.Else>
                                                                                      <Assign>
                                                                                        <Assign.To>
                                                                                          <OutArgument x:TypeArguments="x:Boolean">
                                                                                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                          </OutArgument>
                                                                                        </Assign.To>
                                                                                        <Assign.Value>
                                                                                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                        </Assign.Value>
                                                                                      </Assign>
                                                                                    </If.Else>
                                                                                  </If>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">extCount</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpValue x:TypeArguments="x:Int32">extCount + 1</mca:CSharpValue>
                                                                                      </InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                              </If.Then>
                                                                              <If.Else>
                                                                                <Sequence DisplayName="Continue Sequence">
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Boolean">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                              </If.Else>
                                                                            </If>
                                                                          </State.Entry>
                                                                          <State.Transitions>
                                                                            <Transition DisplayName="extend &gt; soti">
                                                                              <Transition.To>
                                                                                <State x:Name="__ReferenceID11" DisplayName="Allowed">
                                                                                  <State.Entry>
                                                                                    <If>
                                                                                      <If.Condition>
                                                                                        <InArgument x:TypeArguments="x:Boolean">
                                                                                          <mca:CSharpValue x:TypeArguments="x:Boolean">curState == 7</mca:CSharpValue>
                                                                                        </InArgument>
                                                                                      </If.Condition>
                                                                                      <If.Then>
                                                                                        <Sequence>
                                                                                          <If>
                                                                                            <If.Condition>
                                                                                              <InArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">curRole == targetRole</mca:CSharpValue>
                                                                                              </InArgument>
                                                                                            </If.Condition>
                                                                                            <If.Then>
                                                                                              <Assign>
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                                  </OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </If.Then>
                                                                                            <If.Else>
                                                                                              <Assign>
                                                                                                <Assign.To>
                                                                                                  <OutArgument x:TypeArguments="x:Boolean">
                                                                                                    <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                                  </OutArgument>
                                                                                                </Assign.To>
                                                                                                <Assign.Value>
                                                                                                  <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                                </Assign.Value>
                                                                                              </Assign>
                                                                                            </If.Else>
                                                                                          </If>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Then>
                                                                                      <If.Else>
                                                                                        <Sequence DisplayName="Continue Sequence">
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Boolean">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Boolean">isNext</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </If.Else>
                                                                                    </If>
                                                                                  </State.Entry>
                                                                                  <State.Transitions>
                                                                                    <Transition DisplayName="extend &gt; oim" To="{x:Reference __ReferenceID1}">
                                                                                      <Transition.Action>
                                                                                        <Sequence DisplayName="OIM">
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                          <Assign>
                                                                                            <Assign.To>
                                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                                              </OutArgument>
                                                                                            </Assign.To>
                                                                                            <Assign.Value>
                                                                                              <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                            </Assign.Value>
                                                                                          </Assign>
                                                                                        </Sequence>
                                                                                      </Transition.Action>
                                                                                      <Transition.Condition>
                                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 2</mca:CSharpValue>
                                                                                      </Transition.Condition>
                                                                                    </Transition>
                                                                                    <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                                                                                      <Transition.Condition>
                                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                                                                      </Transition.Condition>
                                                                                    </Transition>
                                                                                  </State.Transitions>
                                                                                </State>
                                                                              </Transition.To>
                                                                              <Transition.Action>
                                                                                <Sequence DisplayName="SOTI">
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                  <Assign>
                                                                                    <Assign.To>
                                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                                      </OutArgument>
                                                                                    </Assign.To>
                                                                                    <Assign.Value>
                                                                                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                                    </Assign.Value>
                                                                                  </Assign>
                                                                                </Sequence>
                                                                              </Transition.Action>
                                                                              <Transition.Condition>
                                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 2</mca:CSharpValue>
                                                                              </Transition.Condition>
                                                                            </Transition>
                                                                            <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                                                                              <Transition.Condition>
                                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                                                              </Transition.Condition>
                                                                            </Transition>
                                                                          </State.Transitions>
                                                                        </State>
                                                                      </Transition.To>
                                                                      <Transition.Action>
                                                                        <Sequence DisplayName="OT">
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">7</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                          <Assign>
                                                                            <Assign.To>
                                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                              </OutArgument>
                                                                            </Assign.To>
                                                                            <Assign.Value>
                                                                              <InArgument x:TypeArguments="x:Int32">7</InArgument>
                                                                            </Assign.Value>
                                                                          </Assign>
                                                                        </Sequence>
                                                                      </Transition.Action>
                                                                      <Transition.Condition>
                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 2 &amp;&amp; extCount &lt; 2</mca:CSharpValue>
                                                                      </Transition.Condition>
                                                                    </Transition>
                                                                    <Transition DisplayName="end" To="{x:Reference __ReferenceID0}">
                                                                      <Transition.Condition>
                                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                                                      </Transition.Condition>
                                                                    </Transition>
                                                                  </State.Transitions>
                                                                </State>
                                                              </Transition.To>
                                                              <Transition.Action>
                                                                <Sequence DisplayName="CRO">
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">12</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </Transition.Action>
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 1</mca:CSharpValue>
                                                              </Transition.Condition>
                                                            </Transition>
                                                            <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                                                              </Transition.Condition>
                                                            </Transition>
                                                            <Transition DisplayName="close &gt; oim" To="{x:Reference __ReferenceID2}">
                                                              <Transition.Action>
                                                                <Sequence DisplayName="OIM">
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">11</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">11</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </Transition.Action>
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 3</mca:CSharpValue>
                                                              </Transition.Condition>
                                                            </Transition>
                                                            <Transition DisplayName="extend (cro)" To="{x:Reference __ReferenceID3}">
                                                              <Transition.Action>
                                                                <If>
                                                                  <If.Condition>
                                                                    <InArgument x:TypeArguments="x:Boolean">
                                                                      <mca:CSharpValue x:TypeArguments="x:Boolean">extCount &lt; 2</mca:CSharpValue>
                                                                    </InArgument>
                                                                  </If.Condition>
                                                                  <If.Then>
                                                                    <Sequence DisplayName="CRO - New &amp; Ext 1">
                                                                      <Assign>
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">
                                                                            <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">12</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Then>
                                                                  <If.Else>
                                                                    <Sequence DisplayName="CRO - Ext 2">
                                                                      <Assign>
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">
                                                                            <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign>
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">
                                                                            <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">2</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign>
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">
                                                                            <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">9</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                      <Assign>
                                                                        <Assign.To>
                                                                          <OutArgument x:TypeArguments="x:Int32">
                                                                            <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                          </OutArgument>
                                                                        </Assign.To>
                                                                        <Assign.Value>
                                                                          <InArgument x:TypeArguments="x:Int32">9</InArgument>
                                                                        </Assign.Value>
                                                                      </Assign>
                                                                    </Sequence>
                                                                  </If.Else>
                                                                </If>
                                                              </Transition.Action>
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 2</mca:CSharpValue>
                                                              </Transition.Condition>
                                                            </Transition>
                                                            <Transition DisplayName="close (oim)" To="{x:Reference __ReferenceID3}">
                                                              <Transition.Action>
                                                                <Sequence DisplayName="OIM">
                                                                  <Assign>
                                                                    <Assign.To>
                                                                      <OutArgument x:TypeArguments="x:Int32">
                                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                                      </OutArgument>
                                                                    </Assign.To>
                                                                    <Assign.Value>
                                                                      <InArgument x:TypeArguments="x:Int32">11</InArgument>
                                                                    </Assign.Value>
                                                                  </Assign>
                                                                </Sequence>
                                                              </Transition.Action>
                                                              <Transition.Condition>
                                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 3</mca:CSharpValue>
                                                              </Transition.Condition>
                                                            </Transition>
                                                          </State.Transitions>
                                                        </State>
                                                      </Transition.To>
                                                      <Transition.Action>
                                                        <Sequence DisplayName="CRO">
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                          <Assign>
                                                            <Assign.To>
                                                              <OutArgument x:TypeArguments="x:Int32">
                                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                              </OutArgument>
                                                            </Assign.To>
                                                            <Assign.Value>
                                                              <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                            </Assign.Value>
                                                          </Assign>
                                                        </Sequence>
                                                      </Transition.Action>
                                                      <Transition.Condition>
                                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; (curMode == 1 || curMode == 2)</mca:CSharpValue>
                                                      </Transition.Condition>
                                                    </Transition>
                                                  </State.Transitions>
                                                </State>
                                              </Transition.To>
                                              <Transition.Action>
                                                <Sequence DisplayName="PS">
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </Transition.Action>
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 1</mca:CSharpValue>
                                              </Transition.Condition>
                                            </Transition>
                                            <Transition DisplayName="extend &gt; cro" To="{x:Reference __ReferenceID4}">
                                              <Transition.Action>
                                                <Sequence DisplayName="CRO">
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                  <Assign>
                                                    <Assign.To>
                                                      <OutArgument x:TypeArguments="x:Int32">
                                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                                      </OutArgument>
                                                    </Assign.To>
                                                    <Assign.Value>
                                                      <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                                    </Assign.Value>
                                                  </Assign>
                                                </Sequence>
                                              </Transition.Action>
                                              <Transition.Condition>
                                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 2</mca:CSharpValue>
                                              </Transition.Condition>
                                            </Transition>
                                          </State.Transitions>
                                        </State>
                                      </Transition.To>
                                      <Transition.Action>
                                        <Sequence DisplayName="OT">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">6</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">6</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </Transition.Action>
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 1</mca:CSharpValue>
                                      </Transition.Condition>
                                    </Transition>
                                    <Transition DisplayName="close &gt; ot" To="{x:Reference __ReferenceID4}">
                                      <Transition.Action>
                                        <Sequence DisplayName="OT">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">6</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">6</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </Transition.Action>
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 3</mca:CSharpValue>
                                      </Transition.Condition>
                                    </Transition>
                                    <Transition DisplayName="extend &gt; ps" To="{x:Reference __ReferenceID5}">
                                      <Transition.Action>
                                        <Sequence DisplayName="PS">
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">5</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                          <Assign>
                                            <Assign.To>
                                              <OutArgument x:TypeArguments="x:Int32">
                                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                              </OutArgument>
                                            </Assign.To>
                                            <Assign.Value>
                                              <InArgument x:TypeArguments="x:Int32">4</InArgument>
                                            </Assign.Value>
                                          </Assign>
                                        </Sequence>
                                      </Transition.Action>
                                      <Transition.Condition>
                                        <mca:CSharpValue x:TypeArguments="x:Boolean">isNext &amp;&amp; curMode == 2</mca:CSharpValue>
                                      </Transition.Condition>
                                    </Transition>
                                  </State.Transitions>
                                </State>
                              </Transition.To>
                              <Transition.Action>
                                <Sequence DisplayName="OIM">
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                  <Assign>
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:Int32">
                                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                                      </OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:Int32">3</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </Transition.Action>
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">isNext</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                            <Transition DisplayName="found" To="{x:Reference __ReferenceID0}">
                              <Transition.Condition>
                                <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                              </Transition.Condition>
                            </Transition>
                          </State.Transitions>
                        </State>
                      </Transition.To>
                      <Transition.Action>
                        <Sequence DisplayName="SOTI">
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">3</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                            </Assign.Value>
                          </Assign>
                          <Assign>
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:Int32">
                                <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                              </OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:Int32">2</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </Transition.Action>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition DisplayName="Close &gt; soti" To="{x:Reference __ReferenceID6}">
              <Transition.Action>
                <Sequence DisplayName="SOTI">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">4</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 3 &amp;&amp; curState != 11</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
            <Transition DisplayName="Extend &gt; ot" To="{x:Reference __ReferenceID7}">
              <Transition.Action>
                <Sequence DisplayName="OT">
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetRole</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">1</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetNextRole</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">2</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetState</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">7</InArgument>
                    </Assign.Value>
                  </Assign>
                  <Assign>
                    <Assign.To>
                      <OutArgument x:TypeArguments="x:Int32">
                        <mca:CSharpReference x:TypeArguments="x:Int32">targetFunction</mca:CSharpReference>
                      </OutArgument>
                    </Assign.To>
                    <Assign.Value>
                      <InArgument x:TypeArguments="x:Int32">7</InArgument>
                    </Assign.Value>
                  </Assign>
                </Sequence>
              </Transition.Action>
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 2</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
            <Transition DisplayName="Archived">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">curMode == 4 || (curMode == 3 &amp;&amp; curState == 11)</mca:CSharpValue>
              </Transition.Condition>
              <Transition.To>
                <State x:Name="__ReferenceID8" DisplayName="Rejected or Closed">
                  <State.Entry>
                    <Sequence DisplayName="End">
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">targetEditMode</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">False</InArgument>
                        </Assign.Value>
                      </Assign>
                      <Assign>
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:Boolean">
                            <mca:CSharpReference x:TypeArguments="x:Boolean">isEnd</mca:CSharpReference>
                          </OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </State.Entry>
                  <State.Transitions>
                    <Transition DisplayName="end" To="{x:Reference __ReferenceID0}">
                      <Transition.Condition>
                        <mca:CSharpValue x:TypeArguments="x:Boolean">isEnd</mca:CSharpValue>
                      </Transition.Condition>
                    </Transition>
                  </State.Transitions>
                </State>
              </Transition.To>
            </Transition>
            <Transition DisplayName="Not Found" To="{x:Reference __ReferenceID8}">
              <Transition.Condition>
                <mca:CSharpValue x:TypeArguments="x:Boolean">curMode &lt; 1 || curMode &gt; 4</mca:CSharpValue>
              </Transition.Condition>
            </Transition>
          </State.Transitions>
        </State>
      </StateMachine.InitialState>
      <x:Reference>__ReferenceID9</x:Reference>
      <x:Reference>__ReferenceID10</x:Reference>
      <x:Reference>__ReferenceID1</x:Reference>
      <x:Reference>__ReferenceID2</x:Reference>
      <x:Reference>__ReferenceID5</x:Reference>
      <x:Reference>__ReferenceID3</x:Reference>
      <x:Reference>__ReferenceID4</x:Reference>
      <x:Reference>__ReferenceID11</x:Reference>
      <x:Reference>__ReferenceID6</x:Reference>
      <x:Reference>__ReferenceID12</x:Reference>
      <x:Reference>__ReferenceID0</x:Reference>
      <x:Reference>__ReferenceID7</x:Reference>
      <x:Reference>__ReferenceID8</x:Reference>
      <StateMachine.Variables>
        <Variable x:TypeArguments="x:Boolean" Default="True" Name="isNext" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="isEnd" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="targetRole" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="targetState" />
        <Variable x:TypeArguments="x:Int32" Default="0" Name="targetFunction" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="targetEditMode" />
        <Variable x:TypeArguments="x:Int32" Name="targetNextRole" />
        <Variable x:TypeArguments="x:Boolean" Default="False" Name="targetNeedAction" />
      </StateMachine.Variables>
      <sads:DebugSymbol.Symbol></sads:DebugSymbol.Symbol>
    </StateMachine>
  </this:MosWF.Implementation>
</this:MosWF>